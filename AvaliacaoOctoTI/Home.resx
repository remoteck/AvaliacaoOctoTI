<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        hLA8IEJYHhAhKBC//9k=
</value>
  </data>
</root>